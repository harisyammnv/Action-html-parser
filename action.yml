name: Code Quality Parser
author: Harisyam Manda
description: A Github Action that parses Code Quality HTML results

inputs:
  github_token:
    description: GitHub API Access Token
    default: ${{ secrets.GITHUB_TOKEN }}
    required: false
  html_file:
    description: Code Quality HTML File Path
    default: "data/CodeQuality/result/index.html"
    required: true
  summary_file_name:
    description: File name to store the parsed results
    default: "file.md"
    required: false
  comment_title:
    description: Report Title to be shown in Action Check Summary
    default: "Quality Report"
    required: false

# outputs:
#   json:
#     description: "Test results as JSON"
#     value: ${{ steps.test-results.outputs.json }}

runs:
  using: 'composite'
  steps:
    - name: Check for Python3
      run: |
        echo '##[group]Check for Python3'
        # we check version here just to execute `python3` with an argument
        # on Windows, there is a `python3.exe` that is a proxy to trigger installation from app store
        # command `which python3` finds that, but `python3 -V` does not return the version on stdout
        if ! which python3 || [[ $(python3 -V) != *"python 3."* && $(python3 -V) != *"Python 3."* ]]
        then
          if ! which python || [[ $(python -V) != *"python 3."* && $(python -V) != *"Python 3."* ]]
          then
            echo "::error::No python3 interpreter found. Please setup python before running this action. You could use https://github.com/actions/setup-python."
            exit 1
          fi
          interpreter="$(which python)"
          if [[ ! -e "${interpreter}3" ]]
          then
            mkdir -p "$RUNNER_TEMP/bin/"
            ln -s "$interpreter" "$RUNNER_TEMP/bin/python3"
            echo "$RUNNER_TEMP/bin" >> $GITHUB_PATH
          fi
        fi
        echo '##[endgroup]'
      shell: bash
    - name: Setup Environment
      uses: snok/install-poetry@v1.3.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-pip-wheels
      uses: actions/cache@v2
      with:
        path: ~/.cache
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        cp $GITHUB_ACTION_PATH\\pyproject.toml .
        poetry install --no-interaction
      shell: bash
    - name: Run Publisher
      id: publisher
      run: |
        source .venv/scripts/activate
        python $GITHUB_ACTION_PATH\\publisher.py
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        HTML_FILE: ${{ inputs.html_file }}
        SUMMARY_FILE_NAME: ${{ inputs.summary_file_name }}
      shell: bash
    - name: Publish Job Summary
      id: publish-results
      run: |
        cat file-summary.md >> $GITHUB_STEP_SUMMARY
      shell: bash
    - uses: LouisBrunner/checks-action@v1.2.0
      if: always()
      with:
        token: ${{ inputs.github_token }}
        name: ${{ inputs.comment_title }}
        conclusion: ${{ job.status }}
        output: |
          {
            "summary": "Quality Report Summary"
          }
        output_text_description_file: "./file.md"

branding:
  icon: 'check-circle'
  color: 'green'